"use strict";(self.webpackChunkpine_docs=self.webpackChunkpine_docs||[]).push([[3976],{619:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var r=t(4848),o=t(8453);const i={sidebar_position:1},s="Introduction",a={id:"intro",title:"Introduction",description:"Start building your next project with Pine in less than 2 minutes.",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/pine-docs/docs/intro",draft:!1,unlisted:!1,editUrl:"https://github.com/BryanMwangi/pine-docs/blob/main/docs/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Guide - Basics",permalink:"/pine-docs/docs/category/guide---basics"}},c={},d=[{value:"Getting Started",id:"getting-started",level:2},{value:"Quick start",id:"quick-start",level:3},{value:"Start your server",id:"start-your-server",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"introduction",children:"Introduction"})}),"\n",(0,r.jsxs)(n.p,{children:["Start building your next project with ",(0,r.jsx)(n.strong,{children:"Pine in less than 2 minutes"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,r.jsxs)(n.p,{children:["We recommend downloading the latest version of ",(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"https://go.dev/dl/",children:"Go"})})," to get started. However, version ",(0,r.jsx)(n.code,{children:"1.18"})," or above is required."]}),"\n",(0,r.jsx)(n.p,{children:"Install Pine by running the following command:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"go get github.com/BryanMwangi/pine\n"})}),"\n",(0,r.jsx)(n.h3,{id:"quick-start",children:"Quick start"}),"\n",(0,r.jsx)(n.p,{children:'Getting started with pine is easy. Here\'s a basic example to create a simple web server that responds with "Hello, World!" on the hello path.'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",children:'package main\n\nimport (\n    "log"\n\n    "github.com/BryanMwangi/pine"\n)\n\nfunc main() {\n    // Initialize a new Pine app\n    app := pine.New()\n\n    // Define a route for the GET method on the path \'/hello\'\n    app.Get("/hello", func(c *pine.Ctx) error {\n        return c.SendString("Hello World!")\n    })\n\n    // Start the server on port 3000\n    log.Fatal(app.Start(":3000"))\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"start-your-server",children:"Start your server"}),"\n",(0,r.jsx)(n.p,{children:"Run the server by executing the following command:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"go run main.go\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"go run main.go"})," command starts the server on the defined port, in this case port ",(0,r.jsx)(n.code,{children:":3000"}),". Head over to ",(0,r.jsx)(n.a,{href:"http://localhost:3000/hello",children:"http://localhost:3000/hello"})," to see the response."]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var r=t(6540);const o={},i=r.createContext(o);function s(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);